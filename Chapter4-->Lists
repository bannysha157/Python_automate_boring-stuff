What is []?
  sln:  The empty list value, which is a list value that contains no items.
  This is similar to how '' is the empty string value.
  
  2)How would you assign the value 'hello' as the third value in a list stored in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)
      sln: spam[2] = 'hello' (Notice that the third value in a list is at index 2 because the first index is 0.)  
      code:
      spam=[2,4,6,8,10]
     spam[2]='helo'
      print(spam)
   o/p= [2, 4, 'helo', 8, 10]


3)For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].
  -->What does spam[int(int('3' * 2) // 11)] evaluate to?
sln:  sln:d' (Note that '3' * 2 is the string '33', which is passed to int() before being divided by 11. This eventually evaluates to 3. 
Expressions can be used wherever values are used.)   

4)What does spam[-1] evaluate to?
   sln:d' (Negative indexes count from the end.)
   
 5)What does spam[:2] evaluate to?
    sln:['a', 'b']
    
 For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].
6. What does bacon.index('cat') evaluate to?
   sln:  inde 1
   
7) What does bacon.append(99) make the list value in bacon look like?
 sln:[3.14, 'cat', 11, 'cat', True, 99]     beacuse list.append method it will add the variale end og the list
 
 8)What does bacon.remove('cat') make the list value in bacon look like?
   sln:[3.14, 11, 'cat', True]   beacuse  if multiple value variable appers list , then it will take first instane of the value will removed


9)What are the operators for list concatenation and list replication?
 sln: The operator for list concatenation is +.
 while the operator for replication is *. (This is the same as for strings.)

10)What is the difference between the append() and insert() list methods?
 sln:While append() will add values only to the end of a list.
 insert() can add them anywhere in the list.
 
 11)What are two ways to remove values from a list?
  sln:The del statement and the remove() list method are two ways to remove values from a list.
   
  12) Name a few ways that list values are similar to string values.
   sln:Both lists and strings can be passed to len(), have indexes and slices, be used in for loops, be concatenated or replicated, and be used with the in and not in operators.
   
   
   13) What is the difference between lists and tuples?
     sln:. Lists are mutable; they can have values added, removed, or changed. Tuples are immutable; they cannot be changed at all. Also, tuples are written using parentheses, ( and ), while lists use the square brackets, [ and ].
    
    
   14)How do you type the tuple value that has just the integer value 42 in it?
     sln:(42,) (The trailing comma is mandatory.)
     
      15) How can you get the tuple form of a list value? How can you get the list form of a tuple value?
        sln:
        sample_list = ['Compile', 'With', 'Favtutor']

#convert list into tuple
tuple1 = tuple(sample_list)

print(tuple1)
print(type(tuple1))
 
Output:
('Compile', 'With', 'Favtutor')
<class 'tuple'>

 -->Using loop inside the tuple:
code:
sample_list = ['Compile', 'With', 'Favtutor']
tuple1 = tuple(i for i in sample_list)
print(tuple1)
 Output:('Compile', 'With', 'Favtutor')
 
 -->3) Unpack list inside the parenthesis:
 sample_list = ['Compile', 'With', 'Favtutor']

#unpack list items and form tuple:
tuple1 = (*sample_list,)
print(tuple1)
print(type(tuple1))
 
Output:
('Compile', 'With', 'Favtutor')
<class 'tuple'>

16. Variables that “contain” list values don’t actually contain lists directly.
What do they contain instead?

sln:They contain references to list values.


17)What is the difference between copy.copy() and copy.deepcopy()?
sln:The copy.copy() function will do a shallow copy of a list, while the copy.deepcopy() function will do a deep copy of a list. That is, only copy.deepcopy() will duplicate any lists inside the list.



